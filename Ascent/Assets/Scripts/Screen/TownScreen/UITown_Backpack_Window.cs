//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;

public class UITown_Backpack_Window : UIPlayerMenuWindow
{
	UIPlayerMenuPanel inventoryPanel;
	UIPlayerMenuPanel mainPanel;

	public enum EBackpackTab
	{
		Accessory = 0,
		Consumable
	}

	EBackpackTab currentTab = EBackpackTab.Accessory;

	/// <summary>
	/// Affects the display and logic of Main and Inventory panel
	/// Also invokes the transition logic
	/// </summary>
	public EBackpackTab CurrentTab
	{
		get { return currentTab; }
		set 
		{
			currentTab = value;
			// TODO: Invoke transition logic here
		}
	}

	public enum EBackpackPanels
	{
		Invalid_Backpack_Panel = -1,
		Backpack_Main_Panel,
		Backpack_Inventory_Panel,
		Max_Backpack_Panel
	}

	public override void Initialise ()
	{
		parentScreen = transform.parent.parent.parent.parent.GetComponent<UIPlayerMenuScreen>();
		base.Initialise ();
	}

	public void Equip(Item item, int slot)
	{
		if (slot <= 3)
		{
			// TODO: put selected item in specified slot, replacing if slot is already occupied
			//player.Hero.GetComponent<Hero>().HeroBackpack.AddItem;
		}
	}

	public override void TransitionToPanel(int index)
	{		

		activePanel.gameObject.SetActive(false);
		activePanel = panels[index];
		activePanel.gameObject.SetActive(true);
	}

	public override void AddAllMenuPanels()
	{
		UITown_Backpack_MainPanel mainpanel =  GetComponentInChildren<UITown_Backpack_MainPanel>();
		UITown_Backpack_InventoryPanel inventory = GetComponentInChildren<UITown_Backpack_InventoryPanel>();
		panels[(int)EBackpackPanels.Backpack_Main_Panel] = mainpanel;
		panels[(int)EBackpackPanels.Backpack_Inventory_Panel] = inventory;
		
		foreach (KeyValuePair<int, UIPlayerMenuPanel> p in panels)
		{
			p.Value.gameObject.SetActive(false);
		}
		
		activePanel = panels[(int)EBackpackPanels.Backpack_Main_Panel];
	}
}

