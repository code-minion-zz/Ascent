//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections.Generic;

/// <summary>
/// Panel plus code to handle Radial menu input
/// </summary>
public class UITown_RadialPanel : UIPlayerMenuPanel
{
	protected Dictionary<float, int> AngleIndex;
	static float ANGLETOLERANCE = 20f;
	protected bool updatePointer = false;

	protected bool CloseTo(float a, float b)
	{
		return (Mathf.Abs(a - b) <= ANGLETOLERANCE);
	}

	public override void Initialise ()
	{
		base.Initialise ();
		
		AngleIndex = new Dictionary<float, int>();
	}

	/// <summary>
	/// Check if arrow is pointing at a button, and highlights it.
	/// Returns false if no button is highlighted.
	/// </summary>
	protected virtual bool HighlightButton ()
	{
		float angle = (parent as UITownWindow).PointerAngle - 90f;

		bool hit = false; // True if at least one match is made

		foreach (KeyValuePair<float,int> p in AngleIndex)
		{
			if (CloseTo(angle,p.Key))
			{
				hit = true;
				if (buttons[p.Value] != currentSelection)
				{
					UICamera.Notify(currentSelection.gameObject, "OnHover", false);
					currentSelection = buttons[p.Value];
					currentHighlightedButton = p.Value;
					//Debug.Log("Button Highlighted :" + currentSelection.gameObject + " Angle:" + angle + " against:" + p.Key);
				}
				UICamera.Notify(currentSelection.gameObject, "OnHover", true);
			}
		}

		// comment out next line for 'sticky selection' behaviour
		if (!hit) // Removes button selection if no longer in range
		{
			currentHighlightedButton = -1;
			UICamera.Notify(currentSelection.gameObject, "OnHover", false);

			return false;
		}
		return true;
	}

	public override void OnEnable()
	{
		base.OnEnable();

		if (currentSelection != null) 
		{
			UICamera.Notify(currentSelection.gameObject, "OnHover", false);
			UICamera.Notify(currentSelection.gameObject, "OnHover", true);
		}
	}
}


