//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
using UnityEngine;

public class UITownWindow : UIPlayerMenuWindow
{
	public Transform pointerTransform;
	public List<UIPlayerMenuPanel> TownPanels;
	[HideInInspector]
	public UILabel TitleLabel = null;
	public UILabel InfoLabel = null;
	public UILabel InstructLabel = null;

	protected float pointerAngle = 90f;
	public float PointerAngle
	{
		get 
		{
			return pointerAngle;
		}
	}

	bool updateTitle;

	public enum EBackpackPanels
	{
		BACKPACK,
		INVENTORY,
		MAX
	}

	public override void Initialise ()
	{
		OnMenuLeftStickMove += HandleOnMenuLeftStickMove;
		base.Initialise ();
		
		TitleLabel = transform.Find("MenuTitle").transform.Find("Label").GetComponent<UILabel>();
		InfoLabel = transform.Find("Information Box").transform.Find("Scroll View").transform.Find("Item Properties").GetComponent<UILabel>();
		InstructLabel = transform.Find("Instructions").GetComponent<UILabel>();

		updateTitle = true;
	}

	public override void Update()
	{
		base.Update();

		if (updateTitle)
		{
			SetTitle();
			updateTitle = false;
		}
	}

	void HandleOnMenuLeftStickMove (InputDevice device)
	{		
		pointerAngle = Utilities.VectorToAngleInDegrees(device.LeftStickX.Value,device.LeftStickY.Value);
		pointerTransform.rotation = Quaternion.Euler(0f,0f,pointerAngle - 90f);
	}

	/// <summary> Return item to inventory if space permits. </summary>
	public bool Unequip(int slot)
	{
		return true;
	}

	public override void TransitionToPanel(int index)
	{	
		activePanel.gameObject.SetActive(false);
		activePanel = panels[index];
		activePanel.gameObject.SetActive(true);
		SetTitle();
	}

	public override void AddAllMenuPanels()
	{
		panels[(int)EBackpackPanels.BACKPACK] = TownPanels[0];
		panels[(int)EBackpackPanels.INVENTORY] = TownPanels[1];

		for (int i = 0; i < panels.Count; ++i)
		{
			panels[i].SetParent(this);
			panels[i].Initialise();
			panels[i].gameObject.SetActive(false);
		}
		
		activePanel = panels[(int)EBackpackPanels.BACKPACK];
		player.ActivePlayerPanel = activePanel;
		NGUITools.SetActive(activePanel.gameObject,true);
	}

	public void SetTitle()
	{
		if (TitleLabel != null)
		{
			if (activePanel is UITown_MainPanel)
			{
				TitleLabel.text = "Town";
			}
			else if (activePanel is UITown_BackpackPanel)
			{
				TitleLabel.text = "Backpack";
			}
		}
	}
}

